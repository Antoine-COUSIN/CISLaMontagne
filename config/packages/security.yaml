security:
    # https://symfony.com/doc/current/security/authenticator_manager.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AppAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/nosMissions, roles: PUBLIC_ACCESS }
        - { path: ^/amicale_sp, roles: PUBLIC_ACCESS }
        - { path: ^/urgency_phone, roles: PUBLIC_ACCESS }
        - { path: ^/contact, roles: PUBLIC_ACCESS }
        - { path: ^/rgpd, roles: PUBLIC_ACCESS }
        - { path: ^/recruitement, roles: PUBLIC_ACCESS }
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/user, roles: ROLE_ADMIN }
        - { path: ^/register, roles: ROLE_ADMIN }
        - { path: ^/station_core_picture, roles: ROLE_ADMIN }
        - { path: ^/tation_story, roles: ROLE_ADMIN }
        - { path: ^/speciality, roles: ROLE_ADMIN }
        - { path: ^/role_center, roles: ROLE_ADMIN }
        - { path: ^/ranks, roles: ROLE_ADMIN }
        - { path: ^/missions, roles: ROLE_ADMIN }
        - { path: ^/grade, roles: ROLE_ADMIN }
        - { path: ^/fonction, roles: ROLE_ADMIN }
        - { path: ^/engins, roles: ROLE_ADMIN }
        - { path: ^/chief_speech, roles: ROLE_ADMIN }
        - { path: ^/amicale_news, roles: ROLE_ADMIN }
        - { path: ^/amicale_descript, roles: ROLE_ADMIN }
        - { path: ^/extranet, roles: ROLE_USER }
        - { path: ^/bugSignalement, roles: ROLE_USER }
        - { path: ^/order_required, roles: ROLE_ADMIN }
        - { path: ^/order_status, roles: ROLE_ADMIN }